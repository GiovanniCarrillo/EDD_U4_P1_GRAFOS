/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author yova_
 */
public class Ventana_Grafos extends javax.swing.JFrame {
    Grafo grfo = new Grafo();
    String vertices="", aristas="";
    String [] res;
    int n;
    /**
     * Creates new form Ventana_Grafos
     */
    public Ventana_Grafos() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        txtDato = new javax.swing.JTextField();
        txtDato1 = new javax.swing.JLabel();
        lblValor = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtMatriz = new javax.swing.JTextArea();
        cmbOpc = new javax.swing.JComboBox<>();
        txtAristas = new javax.swing.JTextField();
        lblDest1 = new javax.swing.JLabel();
        lblVertices = new javax.swing.JLabel();
        cmbVertices = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("APLICAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txtDato1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtDato1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtDato1.setText("GRAFOS");

        lblValor.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblValor.setText("Dato:");

        txtMatriz.setColumns(20);
        txtMatriz.setRows(5);
        jScrollPane1.setViewportView(txtMatriz);

        cmbOpc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecciona:", "Insertar Vertice", "Borrar Vertice", "Insertar Arista", "Borrar Arista", "Matriz Adyacencia", "Lista Adyacencia", "Verificar Camino" }));
        cmbOpc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbOpcActionPerformed(evt);
            }
        });

        lblDest1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblDest1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblDest1.setText("Aristas:");

        lblVertices.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblVertices.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblVertices.setText("Vertices:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDato1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblVertices, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblValor, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDest1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtAristas, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtDato)
                            .addComponent(cmbVertices, javax.swing.GroupLayout.Alignment.TRAILING, 0, 182, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbOpc, 0, 163, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtDato1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbOpc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbVertices, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblVertices))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(txtDato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblValor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDest1)
                    .addComponent(txtAristas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int opc = cmbOpc.getSelectedIndex(); char dato=' ', destino = ' ';
        if(opc<5){
        if(txtDato.getText().length()==0){ this.setTitle("Â¡Inserta un dato!"); return; }
            dato = txtDato.getText().toUpperCase().charAt(0);
        }
        if(opc>2 && opc<5)  destino = (char) cmbVertices.getSelectedItem();
        boolean respuesta;
        
        switch (opc){
            case 1:
                respuesta = grfo.insertarVertice(dato);
                mostrarRes(respuesta); //Muestra en el titulo de la ventana si se pudo o no insertar/eliminar 
                vertices+=dato+", "; // "" -> A, B, C, D
                if(respuesta) cmbVertices.addItem(dato);
            break;
            case 2: 
                respuesta = grfo.eliminarVertice(dato); //Si respuestav == true SI se elimino el vertice
                mostrarRes(respuesta);  //Muestra en el titulo de la ventana si se pudo o no insertar/eliminar 
                if(respuesta) cmbVertices.removeItem(dato);
                
                eliminarVertices(respuesta, dato);
            break;
            case 3: 
                respuesta = grfo.insertarArista(dato, destino);  
                mostrarRes(respuesta);
                if(respuesta) aristas+=dato+","+destino+" ";
            break;
            case 4: 
                respuesta = grfo.eliminarArista(dato, destino);
                mostrarRes(respuesta);
                String aristaEliminada = dato+","+destino; //A,B
                mostrarAristas(respuesta, aristaEliminada);
                
            break;
            case 5:
                if(aristas.length()==0){ txtMatriz.setText("No existen aristas para crear la matriz. "); return;}
                String aux = vertices.replaceAll(", ", ""); //A, B, C, D ---> ABCD
                char [] aux2 = aux.toCharArray();// ABCD ---> [A][B][C][D]
                boolean datos[][] = grfo.matrizAdyacencia();
                String mAd = "";
                for (int i = 0; i < aux2.length; i++) {
                    mAd += aux2[i];
                }

                for (int i = 0; i < aux2.length; i++) {
                    mAd += "\n" + aux2[i] + " ";
                    for (int j = 0; j < aux2.length; j++) {
                        if(datos[i][j]){
                            mAd+="1 ";
                        }else{
                            mAd+="0 ";
                        }
                    }
                }
                txtMatriz.setText(mAd);
            break;
            case 6: 
                if (cmbVertices.getItemCount() > 0)
                txtMatriz.setText(grfo.listaAdyacencia((char) cmbVertices.getSelectedItem()));
            break;
            case 7:
                String c = txtDato.getText().replaceAll(", ", "");
                char [] camino = c.toCharArray();
                txtMatriz.setText(grfo.VerificarCamino(camino));
                
        }
        if(cmbOpc.getSelectedIndex()!=4){ txtAristas.setText(aristas); }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cmbOpcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbOpcActionPerformed
        int opc = cmbOpc.getSelectedIndex();
        if(opc == 4 || opc == 3){
                lblVertices.setText("Destino:");
                lblValor.setText("Origen:");      
        }else{
            lblVertices.setText("Vertices");
            lblValor.setText("Dato");
        }
    }//GEN-LAST:event_cmbOpcActionPerformed
    public void mostrarRes(boolean respuesta){
        String mensaje = "InserciÃ³n/EliminaciÃ³n fallida.";
        if(respuesta) mensaje = "Se aplicÃ³ correctamente la operaciÃ³n.";
        setTitle(mensaje);
        txtDato.setText("");
        
    }
    
    
    public void mostrarAristas(boolean respuesta, String aristaEliminada){
        String[] aris = aristas.split(" ");
            if(respuesta){
                aristas ="";
                String cad="";
                for(int i=0; i<aris.length; i++){
                    if(aris[i].equals(aristaEliminada)){
                        cad+= "";
                        aristas += "";
                    }else{
                        cad = cad+aris[i]+" ";
                        aristas += aris[i]+" ";
                        }
                    }
                    txtAristas.setText(cad);
            }
    }
    
    public void eliminarVertices(boolean respuesta, char vElim){
        String vtrc = vertices.replaceAll(", ", ""); //A, B, C, D ---> ABCD
        vertices ="";
            char [] vt = vtrc.toCharArray();// ABCD ---> [A][B][C][D]
            if(respuesta){
                String cad="";
                for(int i=0; i<vt.length; i++){
                    if(vt[i]!=vElim){
                        cad+= vt[i]+", ";
                        vertices+= vt[i]+", ";
                        }
                    }
                }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana_Grafos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana_Grafos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana_Grafos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana_Grafos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana_Grafos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbOpc;
    private javax.swing.JComboBox<Character
    > cmbVertices;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDest1;
    private javax.swing.JLabel lblValor;
    private javax.swing.JLabel lblVertices;
    private javax.swing.JTextField txtAristas;
    private javax.swing.JTextField txtDato;
    private javax.swing.JLabel txtDato1;
    private javax.swing.JTextArea txtMatriz;
    // End of variables declaration//GEN-END:variables
}
